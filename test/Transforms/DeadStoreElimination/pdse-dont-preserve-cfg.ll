; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -S -basicaa -pdse -licm %s | FileCheck %s

declare void @widget()

; Ensure that `preserveCFG` isn't set when critical edges have been split.
define void @hoge(i8* %x) {
; CHECK-LABEL: @hoge(
; CHECK-NEXT:  bb:
; CHECK-NEXT:    br label [[BB1:%.*]]
; CHECK:       bb1:
; CHECK-NEXT:    br i1 undef, label [[BB2:%.*]], label [[BB1_BB3_CRIT_EDGE:%.*]]
; CHECK:       bb1.bb3_crit_edge:
; CHECK-NEXT:    store i8 123, i8* [[X:%.*]]
; CHECK-NEXT:    br label [[BB3:%.*]]
; CHECK:       bb2:
; CHECK-NEXT:    br i1 undef, label [[BB6:%.*]], label [[BB2_BB3_CRIT_EDGE:%.*]]
; CHECK:       bb2.bb3_crit_edge:
; CHECK-NEXT:    store i8 123, i8* [[X]]
; CHECK-NEXT:    br label [[BB3]]
; CHECK:       bb3:
; CHECK-NEXT:    br i1 undef, label [[BB5:%.*]], label [[BB4:%.*]]
; CHECK:       bb4:
; CHECK-NEXT:    call void @widget()
; CHECK-NEXT:    br label [[BB11:%.*]]
; CHECK:       bb5:
; CHECK-NEXT:    br label [[BB8:%.*]]
; CHECK:       bb6:
; CHECK-NEXT:    br i1 undef, label [[BB11]], label [[BB7:%.*]]
; CHECK:       bb7:
; CHECK-NEXT:    store i8 123, i8* [[X]]
; CHECK-NEXT:    call void @widget()
; CHECK-NEXT:    br label [[BB8]]
; CHECK:       bb8:
; CHECK-NEXT:    br i1 false, label [[BB9:%.*]], label [[BB10:%.*]]
; CHECK:       bb9:
; CHECK-NEXT:    br label [[BB11]]
; CHECK:       bb10:
; CHECK-NEXT:    unreachable
; CHECK:       bb11:
; CHECK-NEXT:    br label [[BB1]]
;
bb:
  br label %bb1
bb1:
  store i8 123, i8* %x
  br i1 undef, label %bb2, label %bb3
bb2:
  br i1 undef, label %bb6, label %bb3
bb3:
  br i1 undef, label %bb5, label %bb4
bb4:
  call void @widget()
  br label %bb11
bb5:
  br label %bb8
bb6:
  br i1 undef, label %bb11, label %bb7
bb7:
  call void @widget()
  br label %bb8
bb8:
  br i1 undef, label %bb9, label %bb10
bb9:
  br label %bb11
bb10:
  unreachable
bb11:
  br label %bb1
}
